(library
 (name c_type_description)
 (public_name ocaml_libbpf.c_type_description)
 (libraries ctypes)
 (modules c_type_description))

(rule
 (target c_types_generated.ml)
 (deps ../stubgen/gen_type_bindings_from_c.exe)
 (action
  (with-stdout-to
   %{target}
   (run %{deps}))))

(library
 (name c_function_description)
 (public_name ocaml_libbpf.c_function_description)
 (libraries ctypes c_type_description)
 (modules c_types_generated c_function_description))

(rule
 (target c_function_generated.ml)
 (deps ../stubgen/gen_function_bindings.exe)
 (action
  (with-stdout-to
   %{target}
   (run %{deps} ml))))

; This is just a level of indirection to organize functions and type bindings

(library
 (name c)
 (public_name ocaml_libbpf.c)
 (libraries c_function_description)
 (modules c c_function_generated))
